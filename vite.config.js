// vite.config.js
import { defineConfig } from 'vite'
import { createMultiLocalePlugin } from './plugins/multi-locale-plugin.js'

export default defineConfig({
  plugins: [
    createMultiLocalePlugin({
      srcDir: 'src',
      pagesDir: 'src/pages',
      layoutsDir: 'src/layouts',
      partialsDir: 'src/partials', 
      dataDir: 'src/data',
      outputDir: 'dist',
      defaultLocale: 'en',
      locales: ['en', 'fr'],
      siteUrl: 'https://example.com',
      localesMeta: {
        en: { name: 'English', rtl: false },
        fr: { name: 'Fran√ßais', rtl: false }
      },
      emitSitemaps: true,
      emit404s: true,
      linkRewrite: 'safety-net'
    }),
    // Virtual entry plugin to provide the required input
    {
      name: 'virtual-entry',
      resolveId(id) {
        if (id === 'virtual:static-site') {
          return id
        }
      },
      load(id) {
        if (id === 'virtual:static-site') {
          return '// Static site generated by multi-locale plugin'
        }
      }
    }
  ],
  // Don't use publicDir since we're handling our own static generation
  publicDir: false,
  build: {
    // Output directory
    outDir: 'dist',
    // Don't empty the directory since our plugin creates files there
    emptyOutDir: false,
    // Provide a virtual entry point for Rollup
    rollupOptions: {
      input: 'virtual:static-site',
      output: {
        // Generate minimal JS output that we can ignore
        entryFileNames: '.vite/[name].js'
      }
    }
  }
})